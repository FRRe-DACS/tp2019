server.port=8080

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.continue-on-error=false # Whether to stop if an error occurs while initializing the database.
#spring.datasource.data= # Data (DML) script resource references.
#spring.datasource.data-username= # Username of the database to execute DML scripts (if different).
#spring.datasource.data-password= # Password of the database to execute DML scripts (if different).
#spring.datasource.dbcp2.*= # Commons DBCP2 specific settings
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.generate-unique-name=false # Whether to generate a random datasource name.
#spring.datasource.hikari.*= # Hikari specific settings
#spring.datasource.initialization-mode=embedded # Initialize the datasource with available DDL and DML scripts.
#spring.datasource.jmx-enabled=false # Whether to enable JMX support (if provided by the underlying pool).
#spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.
#spring.datasource.name= # Name of the datasource. Default to "testdb" when using an embedded database.
spring.datasource.password=password
#spring.datasource.platform=all # Platform to use in the DDL or DML scripts (such as schema-${platform}.sql or data-${platform}.sql).
#spring.datasource.schema= # Schema (DDL) script resource references.
#spring.datasource.schema-username= # Username of the database to execute DDL scripts (if different).
#spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).
#spring.datasource.separator=; # Statement separator in SQL initialization scripts.
#spring.datasource.sql-script-encoding= # SQL scripts encoding.
#spring.datasource.tomcat.*= # Tomcat datasource specific settings
#spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
spring.datasource.url=jdbc:postgresql://localhost:5432/dacs
spring.datasource.username=postgres
#spring.datasource.xa.data-source-class-name= # XA datasource fully qualified name.
#spring.datasource.xa.properties= # Properties to pass to the XA data source.

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false


# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
#spring.data.jpa.repositories.bootstrap-mode=default # Bootstrap mode for JPA repositories.
spring.data.jpa.repositories.enabled=true
#spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.naming.implicit-strategy= # Fully qualified name of the implicit naming strategy.
#spring.jpa.hibernate.naming.physical-strategy= # Fully qualified name of the physical naming strategy.
#spring.jpa.hibernate.use-new-id-generator-mappings= # Whether to use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#spring.jpa.mapping-resources= # Mapping resources (equivalent to "mapping-file" entries in persistence.xml).
#spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#spring.jpa.properties.*= # Additional native properties to set on the JPA provider.
spring.jpa.show-sql=true

# JTA (JtaAutoConfiguration)
#spring.jta.enabled=true # Whether to enable JTA support.
#spring.jta.log-dir= # Transaction logs directory.
#spring.jta.transaction-manager-id= # Transaction manager unique identifier.
